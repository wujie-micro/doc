import{_ as s,o as l,c as n,Q as a}from"./chunks/framework.fe3fd81d.js";const A=JSON.parse('{"title":"bus","description":"","frontmatter":{},"headers":[],"relativePath":"api/bus.md","lastUpdated":1661566413000}'),o={name:"api/bus.md"},p=a(`<h1 id="bus" tabindex="-1">bus <a class="header-anchor" href="#bus" aria-label="Permalink to &quot;bus&quot;">​</a></h1><ul><li><strong>类型：</strong> <code>EventBus</code></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">eventObj</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$on</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">callback</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/** 任何$emit都会导致监听函数触发，第一个参数为事件名，后续的参数为$emit的参数 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$onAll</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$once</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">callback</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$off</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">callback</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$offAll</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">callback</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$emit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">$clear</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventBus</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>详情：</strong> 去中心化的事件平台，类<code>Vue</code>的事件<code>api</code>，支持链式调用。<a href="/doc/guide/communication.html#eventbus-通信">示例</a></li></ul><h2 id="on" tabindex="-1">$on <a class="header-anchor" href="#on" aria-label="Permalink to &quot;$on&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(event: string, fn: callback) =&gt; EventBus</code></p></li><li><p><strong>参数：</strong></p><ul><li><code>{string} event</code> 事件名</li><li><code>{callback} fn</code> 回调参数</li></ul></li><li><p><strong>详情：</strong> 监听事件并提供回调</p></li></ul><h2 id="onall" tabindex="-1">$onAll <a class="header-anchor" href="#onall" aria-label="Permalink to &quot;$onAll&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(fn: (event: string, ...args: Array&lt;any&gt;) =&gt; any) =&gt; EventBus</code></p></li><li><p><strong>参数：</strong></p><ul><li><code>{callback} fn</code> 回调参数</li></ul></li><li><p><strong>详情：</strong> 监听所有事件并提供回调，回调函数的第一个参数是事件名</p></li></ul><h2 id="once" tabindex="-1">$once <a class="header-anchor" href="#once" aria-label="Permalink to &quot;$once&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(event: string, fn: callback) =&gt; void</code></p></li><li><p><strong>参数：</strong></p><ul><li><code>{string} event</code> 事件名</li><li><code>{callback} fn</code> 回调参数</li></ul></li><li><p><strong>详情：</strong> 一次性的监听事件</p></li></ul><h2 id="off" tabindex="-1">$off <a class="header-anchor" href="#off" aria-label="Permalink to &quot;$off&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(event: string, fn: callback) =&gt; EventBus</code></p></li><li><p><strong>参数：</strong></p><ul><li><code>{string} event</code> 事件名</li><li><code>{callback} fn</code> 回调参数</li></ul></li><li><p><strong>详情：</strong> 取消事件监听</p></li></ul><h2 id="offall" tabindex="-1">$offAll <a class="header-anchor" href="#offall" aria-label="Permalink to &quot;$offAll&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(fn: callback) =&gt; EventBus</code></p></li><li><p><strong>参数：</strong></p><ul><li><code>{callback} fn</code> 回调参数</li></ul></li><li><p><strong>详情：</strong> 取消监听所有事件</p></li></ul><h2 id="emit" tabindex="-1">$emit <a class="header-anchor" href="#emit" aria-label="Permalink to &quot;$emit&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(event: string, ...args: Array&lt;any&gt;) =&gt; EventBus</code></p></li><li><p><strong>参数：</strong></p><ul><li><code>{string} event</code> 事件名</li><li><code>{Array&lt;any&gt;} args</code> 其他回调参数</li></ul></li><li><p><strong>详情：</strong> 触发事件</p></li></ul><h2 id="clear" tabindex="-1">$clear <a class="header-anchor" href="#clear" aria-label="Permalink to &quot;$clear&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>Function</code></p></li><li><p><strong>详情：</strong> 清空<code>EventBus</code>实例下所有监听事件</p></li></ul><div class="warning custom-block"><p class="custom-block-title">警告</p><ul><li>子应用在被销毁或者重新渲染（非保活状态）时框架会自动调用清空上次渲染所有的订阅事件</li><li>子应用内部组件的渲染可能导致反复订阅（比如在<code>mounted</code>生命周期调用<code>$wujie.bus.$on</code>），需要用户在<code>unmount</code>生命周期内手动调用<code>$wujie.bus.$off</code>来取消订阅</li></ul></div>`,19),t=[p];function e(c,r,i,y,F,D){return l(),n("div",null,t)}const d=s(o,[["render",e]]);export{A as __pageData,d as default};
