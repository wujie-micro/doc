(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{280:function(v,_,e){"use strict";e.r(_);var t=e(1),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"微前端是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微前端是什么"}},[v._v("#")]),v._v(" 微前端是什么")]),v._v(" "),_("p",[v._v("微前端是一种多个团队通过独立发布功能的方式来共同构建现代化 web 应用的技术手段及方法策略。")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("引用")]),v._v(" "),_("p",[v._v("Techniques, strategies and recipes for building a modern web app with multiple teams that can ship features independently. -- "),_("a",{attrs:{href:"https://micro-frontends.org/",target:"_blank",rel:"noopener noreferrer"}},[v._v("Micro Frontends"),_("OutboundLink")],1)])]),v._v(" "),_("p",[v._v("通俗来说，就是在一个"),_("code",[v._v("web")]),v._v("应用中可以独立的运行另一个"),_("code",[v._v("web")]),v._v("应用")]),v._v(" "),_("p",[v._v("微前端有什么使用场景呢？")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("举例")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("比如制作一个企业管理平台，把已有的采购系统和财务系统统一接入这个平台；")])]),v._v(" "),_("li",[_("p",[v._v("比如有一个巨大的应用，为了降低开发和维护成本，分拆成多个小应用进行开发和部署，然后用一个平台将这些小应用集成起来；")])]),v._v(" "),_("li",[_("p",[v._v("又比如一个应用使用"),_("code",[v._v("vue")]),v._v("框架开发，其中有一个比较独立的模块，开发者想尝试使用"),_("code",[v._v("react")]),v._v("框架来开发，等模块单独开发部署完，再把这个模块应用接回去")])])])]),v._v(" "),_("p",[v._v("一个完善的的微前端框架应该具备哪些能力呢？")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("能力")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("子应用的加载和卸载能力")])]),v._v(" "),_("p",[v._v("页面需要从一个子应用切换到另一个子应用，框架必须具备加载、渲染、切换的能力")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("子应用独立运行的能力")])]),v._v(" "),_("p",[v._v("子应用运行会污染全局的 window 对象，样式会污染其他应用，必须有效的隔离起来")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("子应用路由状态保持能力")])]),v._v(" "),_("p",[v._v("激活子应用后，浏览器刷新、前进、后退子应用的路由都应该可以正常工作")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("应用间通信的能力")])]),v._v(" "),_("p",[v._v("应用间可以方便、快捷的通信")])])])]),v._v(" "),_("p",[v._v("使用微前端有什么收益呢？("),_("a",{attrs:{href:"https://qiankun.umijs.org/zh/guide",target:"_blank",rel:"noopener noreferrer"}},[v._v("@reference 乾坤"),_("OutboundLink")],1),v._v(")")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("收益")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("技术栈无关")])]),v._v(" "),_("p",[v._v("主框架不限制接入应用的技术栈，微应用具备完全自主权")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("独立开发、独立部署")])]),v._v(" "),_("p",[v._v("微应用仓库独立，前后端可独立开发，部署完成后主框架自动完成同步更新")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("增量升级")])]),v._v(" "),_("p",[v._v("在面对各种复杂场景时，我们通常很难对一个已经存在的系统做全量的技术栈升级或重构，而微前端是一种非常好的实施渐进式重构的手段和策略")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("独立运行时")])]),v._v(" "),_("p",[v._v("每个微应用之间状态隔离，运行时状态不共享")])])])]),v._v(" "),_("p",[v._v("可能有人会有疑问直接使用"),_("code",[v._v("iframe")]),v._v("不就可以做到吗？")]),v._v(" "),_("h2",{attrs:{id:"iframe-方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#iframe-方案"}},[v._v("#")]),v._v(" iframe 方案")]),v._v(" "),_("p",[v._v("采用"),_("code",[v._v("iframe")]),v._v("的方案确实可以做到，而且优点非常明显")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("优点")]),v._v(" "),_("ul",[_("li",[v._v("非常简单，使用没有任何心智负担")]),v._v(" "),_("li",[_("code",[v._v("web")]),v._v("应用隔离的非常完美，无论是"),_("code",[v._v("js")]),v._v("、"),_("code",[v._v("css")]),v._v("、"),_("code",[v._v("dom")]),v._v("都完全隔离开来")])])]),v._v(" "),_("p",[v._v("由于其"),_("strong",[v._v("隔离的太完美")]),v._v("导致缺点也非常明显")]),v._v(" "),_("div",{staticClass:"custom-block danger"},[_("p",{staticClass:"custom-block-title"},[v._v("缺点")]),v._v(" "),_("ul",[_("li",[v._v("路由状态丢失，刷新一下，"),_("code",[v._v("iframe")]),v._v("的"),_("code",[v._v("url")]),v._v("状态就丢失了")]),v._v(" "),_("li",[_("code",[v._v("dom")]),v._v("割裂严重，弹窗只能在"),_("code",[v._v("iframe")]),v._v("内部展示，无法覆盖全局")]),v._v(" "),_("li",[_("code",[v._v("web")]),v._v("应用之间通信非常困难")]),v._v(" "),_("li",[v._v("每次打开白屏时间太长，对于"),_("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[v._v("SPA 应用"),_("OutboundLink")],1),v._v("来说无法接受")])])]),v._v(" "),_("h2",{attrs:{id:"single-spa-方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#single-spa-方案"}},[v._v("#")]),v._v(" single-spa 方案")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://zh-hans.single-spa.js.org/docs/getting-started-overview",target:"_blank",rel:"noopener noreferrer"}},[v._v("single-spa"),_("OutboundLink")],1),v._v("是一个目前主流的微前端技术方案，其主要实现思路：")]),v._v(" "),_("ul",[_("li",[v._v("预先注册子应用(激活路由、子应用资源、生命周期函数)")]),v._v(" "),_("li",[v._v("监听路由的变化，匹配到了激活的路由则加载子应用资源，顺序调用生命周期函数并最终渲染到容器")])]),v._v(" "),_("p",[_("a",{attrs:{href:"https://qiankun.umijs.org/zh/guide",target:"_blank",rel:"noopener noreferrer"}},[v._v("乾坤"),_("OutboundLink")],1),v._v("微前端架构则进一步对"),_("code",[v._v("single-spa")]),v._v("方案进行完善，主要的完善点：")]),v._v(" "),_("ul",[_("li",[v._v("子应用资源由 js 列表修改进为一个"),_("code",[v._v("url")]),v._v("，大大减轻注册子应用的复杂度")]),v._v(" "),_("li",[v._v("实现应用隔离，完成"),_("code",[v._v("js")]),v._v("隔离方案 "),_("em",[v._v("（"),_("code",[v._v("window")]),v._v("工厂）")]),v._v(" 和"),_("code",[v._v("css")]),v._v("隔离方案 "),_("em",[v._v("（类"),_("code",[v._v("vue")]),v._v("的"),_("code",[v._v("scoped")]),v._v("）")])]),v._v(" "),_("li",[v._v("增加资源预加载能力，预先子应用"),_("code",[v._v("html")]),v._v("、"),_("code",[v._v("js")]),v._v("、"),_("code",[v._v("css")]),v._v("资源缓存下来，加快子应用的打开速度")])]),v._v(" "),_("p",[v._v("总结一下方案的优缺点：")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("优点")]),v._v(" "),_("ul",[_("li",[v._v("监听路由自动的加载、卸载当前路由对应的子应用")]),v._v(" "),_("li",[v._v("完备的沙箱方案，"),_("code",[v._v("js")]),v._v("沙箱做了"),_("code",[v._v("SnapshotSandbox")]),v._v("、"),_("code",[v._v("LegacySandbox")]),v._v("、"),_("code",[v._v("ProxySandbox")]),v._v("三套渐进增强方案，"),_("code",[v._v("css")]),v._v("沙箱做了两套"),_("code",[v._v("strictStyleIsolation")]),v._v("、"),_("code",[v._v("experimentalStyleIsolation")]),v._v("两套适用不同场景的方案")]),v._v(" "),_("li",[v._v("路由保持，浏览器刷新、前进、后退，都可以作用到子应用")]),v._v(" "),_("li",[v._v("应用间通信简单，全局注入")])])]),v._v(" "),_("div",{staticClass:"custom-block danger"},[_("p",{staticClass:"custom-block-title"},[v._v("缺点")]),v._v(" "),_("ul",[_("li",[v._v("基于路由匹配，无法同时激活多个子应用，也不支持子应用保活")]),v._v(" "),_("li",[v._v("改造成本较大，从 "),_("code",[v._v("webpack")]),v._v("、代码、路由等等都要做一系列的适配")]),v._v(" "),_("li",[_("code",[v._v("css")]),v._v(" 沙箱无法绝对的隔离，"),_("code",[v._v("js")]),v._v(" 沙箱在某些场景下执行性能下降严重")]),v._v(" "),_("li",[v._v("无法支持 "),_("code",[v._v("vite")]),v._v(" 等 "),_("code",[v._v("ESM")]),v._v(" 脚本运行")])])]),v._v(" "),_("h2",{attrs:{id:"无界方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#无界方案"}},[v._v("#")]),v._v(" 无界方案")]),v._v(" "),_("p",[v._v("在乾坤的"),_("code",[v._v("issue")]),v._v("中一个"),_("a",{attrs:{href:"https://github.com/umijs/qiankun/issues/286",target:"_blank",rel:"noopener noreferrer"}},[v._v("议题"),_("OutboundLink")],1),v._v("非常有意思，有个开发者提出能否利用"),_("code",[v._v("iframe")]),v._v("来实现"),_("code",[v._v("js")]),v._v("沙箱能力，这个"),_("code",[v._v("ideal")]),v._v("启发了无界方案，下面详细介绍")]),v._v(" "),_("h3",{attrs:{id:"应用加载机制和-js-沙箱机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用加载机制和-js-沙箱机制"}},[v._v("#")]),v._v(" 应用加载机制和 js 沙箱机制")]),v._v(" "),_("p",[v._v("将子应用的"),_("code",[v._v("js")]),v._v("注入主应用同域的"),_("code",[v._v("iframe")]),v._v("中运行，"),_("code",[v._v("iframe")]),v._v("是一个原生的"),_("code",[v._v("window")]),v._v("沙箱，内部有完整的"),_("code",[v._v("history")]),v._v("和"),_("code",[v._v("location")]),v._v("接口，子应用实例"),_("code",[v._v("instance")]),v._v("运行在"),_("code",[v._v("iframe")]),v._v("中，路由也彻底和主应用解耦，可以直接在业务组件里面启动应用。")]),v._v(" "),_("p",[v._v("采用这种方式我们可以获得")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("收益")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("组件方式来使用微前端")])]),v._v(" "),_("p",[v._v("不用注册，不用改造路由，直接使用无界组件，化繁为简")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("一个页面可以同时激活多个子应用")])]),v._v(" "),_("p",[v._v("子应用采用 iframe 的路由，不用关心路由占用的问题")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("天然 js 沙箱，不会污染主应用环境")])]),v._v(" "),_("p",[v._v("不用修改主应用"),_("code",[v._v("window")]),v._v("任何属性，只在"),_("code",[v._v("iframe")]),v._v("内部进行修改")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("应用切换没有清理成本")])]),v._v(" "),_("p",[v._v("由于不污染主应用，子应用销毁也无需做任何清理工作")])])])]),v._v(" "),_("h3",{attrs:{id:"路由同步机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由同步机制"}},[v._v("#")]),v._v(" 路由同步机制")]),v._v(" "),_("p",[v._v("在"),_("code",[v._v("iframe")]),v._v("内部进行"),_("code",[v._v("history.pushState")]),v._v("，浏览器会自动的在"),_("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/history.html#joint-session-history",target:"_blank",rel:"noopener noreferrer"}},[v._v("joint session history"),_("OutboundLink")],1),v._v("中添加"),_("code",[v._v("iframe")]),v._v("的"),_("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/history.html#session-history",target:"_blank",rel:"noopener noreferrer"}},[v._v("session-history"),_("OutboundLink")],1),v._v("，浏览器的前进、后退在不做任何处理的情况就可以直接作用于子应用")]),v._v(" "),_("p",[v._v("劫持"),_("code",[v._v("iframe")]),v._v("的"),_("code",[v._v("history.pushState")]),v._v("和"),_("code",[v._v("history.replaceState")]),v._v("，就可以将子应用的"),_("code",[v._v("url")]),v._v("同步到主应用的"),_("code",[v._v("query")]),v._v("参数上，当刷新浏览器初始化"),_("code",[v._v("iframe")]),v._v("时，读回子应用的"),_("code",[v._v("url")]),v._v("并使用"),_("code",[v._v("iframe")]),v._v("的"),_("code",[v._v("history.replaceState")]),v._v("进行同步")]),v._v(" "),_("p",[v._v("采用这种方式我们可以获得")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("收益")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("浏览器刷新、前进、后退都可以作用到子应用")])]),v._v(" "),_("li",[_("strong",[v._v("实现成本低，无需复杂的监听来处理同步问题")])]),v._v(" "),_("li",[_("strong",[v._v("多应用同时激活时也能保持路由同步")])])])]),v._v(" "),_("h3",{attrs:{id:"iframe-连接机制和-css-沙箱机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#iframe-连接机制和-css-沙箱机制"}},[v._v("#")]),v._v(" iframe 连接机制和 css 沙箱机制")]),v._v(" "),_("p",[v._v("无界采用"),_("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Web_Components",target:"_blank",rel:"noopener noreferrer"}},[v._v("webcomponent"),_("OutboundLink")],1),v._v("来实现页面的样式隔离，无界会创建一个"),_("code",[v._v("wujie")]),v._v("自定义元素，然后将子应用的完整结构渲染在内部")]),v._v(" "),_("p",[v._v("子应用的实例"),_("code",[v._v("instance")]),v._v("在"),_("code",[v._v("iframe")]),v._v("内运行，"),_("code",[v._v("dom")]),v._v("在主应用容器下的"),_("code",[v._v("webcomponent")]),v._v("内，通过代理 "),_("code",[v._v("iframe")]),v._v("的"),_("code",[v._v("document")]),v._v("到"),_("code",[v._v("webcomponent")]),v._v("，可以实现两者的互联。")]),v._v(" "),_("p",[v._v("将"),_("code",[v._v("document")]),v._v("的查询类接口："),_("code",[v._v("getElementsByTagName、getElementsByClassName、getElementsByName、getElementById、querySelector、querySelectorAll、head、body")]),v._v("全部代理到"),_("code",[v._v("webcomponent")]),v._v("，这样"),_("code",[v._v("instance")]),v._v("和"),_("code",[v._v("webcomponent")]),v._v("就精准的链接起来。")]),v._v(" "),_("p",[v._v("当子应用发生切换，"),_("code",[v._v("iframe")]),v._v("保留下来，子应用的容器可能销毁，但"),_("code",[v._v("webcomponent")]),v._v("依然可以选择保留，这样等应用切换回来将"),_("code",[v._v("webcomponent")]),v._v("再挂载回容器上，子应用可以获得类似"),_("code",[v._v("vue")]),v._v("的"),_("code",[v._v("keep-alive")]),v._v("的能力.")]),v._v(" "),_("p",[v._v("采用这种方式我们可以获得")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("收益")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("天然 css 沙箱")])]),v._v(" "),_("p",[v._v("直接物理隔离，样式隔离子应用不用做任何修改")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("天然适配弹窗问题")])]),v._v(" "),_("p",[_("code",[v._v("document.body")]),v._v("的"),_("code",[v._v("appendChild")]),v._v("或者"),_("code",[v._v("insertBefore")]),v._v("会代理直接插入到"),_("code",[v._v("webcomponent")]),v._v("，子应用不用做任何改造")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("子应用保活")])]),v._v(" "),_("p",[v._v("子应用保留"),_("code",[v._v("iframe")]),v._v("和"),_("code",[v._v("webcomponent")]),v._v("，应用内部的"),_("code",[v._v("state")]),v._v("不会丢失")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("完整的 DOM 结构")])]),v._v(" "),_("p",[_("code",[v._v("webcomponent")]),v._v("保留了子应用完整的"),_("code",[v._v("html")]),v._v("结构，样式和结构完全对应，子应用不用做任何修改")])])])]),v._v(" "),_("h3",{attrs:{id:"通信机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#通信机制"}},[v._v("#")]),v._v(" 通信机制")]),v._v(" "),_("p",[v._v("承载子应用的"),_("code",[v._v("iframe")]),v._v("和主应用是同域的，所以主、子应用天然就可以很好的进行通信，在无界我们提供三种通信方式")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("props 注入机制")])])]),v._v(" "),_("p",[v._v("子应用通过"),_("code",[v._v("$wujie.props")]),v._v("可以轻松拿到主应用注入的数据")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("window.parent 通信机制")])])]),v._v(" "),_("p",[v._v("子应用"),_("code",[v._v("iframe")]),v._v("沙箱和主应用同源，子应用可以直接通过"),_("code",[v._v("window.parent")]),v._v("和主应用通信")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("去中心化的通信机制")])])]),v._v(" "),_("p",[v._v("无界提供了"),_("code",[v._v("EventBus")]),v._v("实例，注入到主应用和子应用，所有的应用可以去中心化的进行通信")]),v._v(" "),_("h3",{attrs:{id:"优势"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[v._v("#")]),v._v(" 优势")]),v._v(" "),_("p",[v._v("通过上面原理的阐述，我们可以得出无界微前端框架的几点优势：")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("优势")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("多应用同时激活在线")])]),v._v(" "),_("p",[v._v("框架具备同时激活多应用，并保持这些应用路由同步的能力")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("组件式的使用方式")])]),v._v(" "),_("p",[v._v("无需注册，更无需路由适配，在组件内使用，跟随组件装载、卸载")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("应用级别的 keep-alive")])]),v._v(" "),_("p",[v._v("子应用开启"),_("RouterLink",{attrs:{to:"/api/startApp.html#alive"}},[v._v("保活模式")]),v._v("后，应用发生切换时整个子应用的状态可以保存下来不丢失，结合"),_("RouterLink",{attrs:{to:"/api/preloadApp.html#exec"}},[v._v("预执行模式")]),v._v("可以获得类似"),_("code",[v._v("ssr")]),v._v("的打开体验")],1)]),v._v(" "),_("li",[_("p",[_("strong",[v._v("纯净无污染")])]),v._v(" "),_("ul",[_("li",[v._v("无界利用"),_("code",[v._v("iframe")]),v._v("和"),_("code",[v._v("webcomponent")]),v._v("来搭建天然的"),_("code",[v._v("js")]),v._v("隔离沙箱和"),_("code",[v._v("css")]),v._v("隔离沙箱")]),v._v(" "),_("li",[v._v("利用"),_("code",[v._v("iframe")]),v._v("的"),_("code",[v._v("history")]),v._v("和主应用的"),_("code",[v._v("history")]),v._v("在同一个"),_("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/browsers.html#top-level-browsing-context",target:"_blank",rel:"noopener noreferrer"}},[v._v("top-level browsing context"),_("OutboundLink")],1),v._v("来搭建天然的路由同步机制")]),v._v(" "),_("li",[v._v("副作用局限在沙箱内部，子应用切换无需任何清理工作，没有额外的切换成本")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("性能和体积兼具")])]),v._v(" "),_("ul",[_("li",[v._v("子应用执行性能和原生一致，子应用实例"),_("code",[v._v("instance")]),v._v("运行在"),_("code",[v._v("iframe")]),v._v("的"),_("code",[v._v("window")]),v._v("上下文中，避免"),_("code",[v._v("with(proxyWindow){code}")]),v._v("这样指定代码执行上下文导致的性能下降，但是多了实例化"),_("code",[v._v("iframe")]),v._v("的一次性的开销，可以通过 "),_("RouterLink",{attrs:{to:"/api/preloadApp.html"}},[v._v("proload")]),v._v(" 提前实例化")],1),v._v(" "),_("li",[v._v("体积比较轻量，借助"),_("code",[v._v("iframe")]),v._v("和"),_("code",[v._v("webcomponent")]),v._v("来实现沙箱，有效的减小了代码量")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("开箱即用")])]),v._v(" "),_("p",[v._v("不管是样式的兼容、路由的处理、弹窗的处理、热更新的加载，子应用完成接入即可开箱即用无需额外处理，应用"),_("RouterLink",{attrs:{to:"/guide/start.html#子应用改造"}},[v._v("接入成本")]),v._v("也极低")],1)])])])])}),[],!1,null,null,null);_.default=o.exports}}]);