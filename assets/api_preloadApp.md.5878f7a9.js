import{_ as n,c as a,N as l,o}from"./chunks/framework.7db8a257.js";const D=JSON.parse('{"title":"preloadApp","description":"","frontmatter":{},"headers":[],"relativePath":"api/preloadApp.md","lastUpdated":1673340560000}'),p={name:"api/preloadApp.md"};function e(t,s,c,r,y,B){return o(),a("div",null,s[0]||(s[0]=[l(`<h1 id="preloadapp" tabindex="-1">preloadApp <a class="header-anchor" href="#preloadapp" aria-label="Permalink to &quot;preloadApp&quot;">​</a></h1><ul><li><p><strong>类型：</strong> <code>Function</code></p></li><li><p><strong>参数：</strong> <code>preOption</code></p></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">lifecycle</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">appWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">loadErrorHandler</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Error</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">preOptions</span><span style="color:#BABED8;">  {</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 唯一性用户必须保证 */</span></span>
<span class="line"><span style="color:#BABED8;">  name: string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 需要渲染的url */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">url</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 需要渲染的html, 如果用户已有则无需从url请求 */</span></span>
<span class="line"><span style="color:#BABED8;">  html</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 注入给子应用的数据 */</span></span>
<span class="line"><span style="color:#BABED8;">  props</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">: </span><span style="color:#BABED8;">string</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> any </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 自定义运行iframe的属性 */</span></span>
<span class="line"><span style="color:#BABED8;">  attrs</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">: </span><span style="color:#BABED8;">string</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> any </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 自定义降级渲染iframe的属性 */</span></span>
<span class="line"><span style="color:#BABED8;">  degradeAttrs</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">: </span><span style="color:#BABED8;">string</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> any </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 代码替换钩子 */</span></span>
<span class="line"><span style="color:#BABED8;">  replace</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">code</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 自定义fetch，资源和接口 */</span></span>
<span class="line"><span style="color:#BABED8;">  fetch</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">input</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">RequestInfo</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">init</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">RequestInit</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">Response</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用保活模式，state不会丢失 */</span></span>
<span class="line"><span style="color:#BABED8;">  alive</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 预执行模式 */</span></span>
<span class="line"><span style="color:#BABED8;">  exec</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** js采用fiber模式执行 */</span></span>
<span class="line"><span style="color:#BABED8;">  fiber</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用采用降级iframe方案 */</span></span>
<span class="line"><span style="color:#BABED8;">  degrade</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应插件 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">plugin</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用生命周期 */</span></span>
<span class="line"><span style="color:#BABED8;">  beforeLoad</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 没有做生命周期改造的子应用不会调用 */</span></span>
<span class="line"><span style="color:#BABED8;">  beforeMount</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  afterMount</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  beforeUnmount</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  afterUnmount</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 非保活应用不会调用 */</span></span>
<span class="line"><span style="color:#BABED8;">  activated</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  deactivated</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> lifecycle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用资源加载失败后调用 */</span></span>
<span class="line"><span style="color:#BABED8;">  loadError</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> loadErrorHandler</span></span>
<span class="line"><span style="color:#BABED8;">}</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ul><li><p><strong>详情：</strong> 预加载可以极大的提升子应用首次打开速度</p><div class="warning custom-block"><p class="custom-block-title">警告</p><ul><li>资源的预加载会占用主应用的网络线程池</li><li>资源的预执行会阻塞主应用的渲染线程</li><li><code>name</code>、<code>replace</code>、<code>fetch</code>、<code>alive</code>、<code>degrade</code>这五个参数在<code>preloadApp</code>和<code>startApp</code>中须保持严格一致，否则子应用的渲染可能出现异常</li></ul></div></li></ul><h2 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>String</code></p></li><li><p><strong>详情：</strong> 子应用唯一标识符</p><div class="tip custom-block"><p class="custom-block-title">技巧</p><p>如果主应用上有多个菜单栏用到了子应用的不同页面，在每个页面启动该子应用的时候建议将 name 设置为同一个，这样可以共享一个实例</p></div></li></ul><h2 id="url" tabindex="-1">url <a class="header-anchor" href="#url" aria-label="Permalink to &quot;url&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>String</code></p></li><li><p><strong>详情：</strong> 子应用的路径地址</p></li></ul><h2 id="html" tabindex="-1">html <a class="header-anchor" href="#html" aria-label="Permalink to &quot;html&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>String</code></p></li><li><p><strong>详情：</strong> 子应用的html，设置后子应用将直接读取该值，没有设置则子应用通过<code>url</code>请求获取</p></li></ul><h2 id="props" tabindex="-1">props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;props&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>{ [key: string]: any }</code></p></li><li><p><strong>详情：</strong> 注入给子应用的数据</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p><code>exec</code>为<code>true</code>此时子应用代码会预执行，如果子应用运行依赖<code>props</code>的数据则须传入<code>props</code>或者子应用做好兼容<code>props</code>不存在，否则子应用运行可能报错</p></div></li></ul><h2 id="attrs" tabindex="-1">attrs <a class="header-anchor" href="#attrs" aria-label="Permalink to &quot;attrs&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>{ [key: string]: any }</code></p></li><li><p><strong>详情：</strong> 自定义<code>iframe</code>属性，子应用运行在<code>iframe</code>内，<code>attrs</code>可以允许用户自定义<code>iframe</code>的属性</p></li></ul><h2 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(codeText: string) =&gt; string</code></p></li><li><p><strong>详情：</strong> 全局代码替换钩子</p><div class="tip custom-block"><p class="custom-block-title">技巧</p><p><code>replace</code>函数可以在运行时处理子应用的代码，如果子应用不方便修改代码，可以在这里进行代码替换，子应用的<code>html</code>、<code>js</code>、<code>css</code>代码均会做替换</p></div></li></ul><h2 id="fetch" tabindex="-1">fetch <a class="header-anchor" href="#fetch" aria-label="Permalink to &quot;fetch&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(input: RequestInfo, init?: RequestInit) =&gt; Promise&lt;Response&gt;</code></p></li><li><p><strong>详情：</strong> 自定义 fetch，添加自定义<code>fetch</code>后，子应用的静态资源请求和采用了 <code>fetch</code> 的接口请求全部会走自定义<code>fetch</code></p><div class="tip custom-block"><p class="custom-block-title">技巧</p><p>对于需要携带 cookie 的请求，可以采用自定义 <code>fetch</code> 方式实现：<code>(url, options) =&gt; window.fetch(url, { ...options, credentials: &quot;include&quot; })</code></p></div></li></ul><h2 id="alive" tabindex="-1">alive <a class="header-anchor" href="#alive" aria-label="Permalink to &quot;alive&quot;">​</a></h2><ul><li><p><strong>默认值：</strong> <code>false</code></p></li><li><p><strong>类型：</strong> <code>Boolean</code></p></li><li><p><strong>详情：</strong></p><p>保活模式，子应用实例<code>instance</code>和<code>webcomponent</code>都不会销毁，子应用的状态和路由都不会丢失，切换子应用只是对<code>webcomponent</code>和容器的热插拔</p><p>如果子应用不想做生命周期改造，子应用切换又不想有白屏时间，可以采用保活模式</p><p>如果主应用上有多个菜单栏跳转到子应用的不同页面，此时不建议采用保活模式。因为子应用在保活状态下<code>startApp</code>无法更改子应用路由，不同菜单栏无法跳转到指定子应用路由，推荐<a href="/doc/guide/mode.html#单例模式">单例模式</a></p><div class="tip custom-block"><p class="custom-block-title">技巧</p><p><a href="/doc/api/preloadApp.html#exec">预执行模式</a>结合保活模式可以实现类似<code>ssr</code>的效果，包括页面数据的请求和渲染全部提前完成，用户可以瞬间打开子应用</p></div></li></ul><h2 id="exec" tabindex="-1">exec <a class="header-anchor" href="#exec" aria-label="Permalink to &quot;exec&quot;">​</a></h2><ul><li><p><strong>默认值：</strong> <code>false</code></p></li><li><p><strong>类型：</strong> <code>Boolean</code></p></li><li><p><strong>详情：</strong> 预执行模式，为<code>false</code>时只会预加载子应用的资源，为<code>true</code>时会预执行子应用代码，极大的加快子应用打开速度</p></li></ul><h2 id="fiber" tabindex="-1">fiber <a class="header-anchor" href="#fiber" aria-label="Permalink to &quot;fiber&quot;">​</a></h2><ul><li><p><strong>默认值：</strong> <code>true</code></p></li><li><p><strong>类型：</strong> <code>Boolean</code></p></li><li><p><strong>详情：</strong></p><p>js 的执行模式，由于子应用的执行会阻塞主应用的渲染线程，当设置为<code>true</code>时<code>js</code>采取类似<code>react fiber</code>的模式方式间断执行，每个 js 文件的执行都包裹在<code>requestidlecallback</code>中，每执行一个<code>js</code>可以返回响应外部的输入，但是这个颗粒度是<code>js</code>文件，如果子应用单个<code>js</code>文件过大，可以通过拆包的方式降低达到<code>fiber</code>模式效益最大化</p><div class="tip custom-block"><p class="custom-block-title">技巧</p><ul><li><p>打开主应用就需要加载的子应用可以将<code>fiber</code>设置为<code>false</code>来加快加载速度</p></li><li><p>其他场景建议采用默认值</p></li></ul></div></li></ul><h2 id="degrade" tabindex="-1">degrade <a class="header-anchor" href="#degrade" aria-label="Permalink to &quot;degrade&quot;">​</a></h2><ul><li><p><strong>默认值：</strong> <code>false</code></p></li><li><p><strong>类型：</strong> <code>Boolean</code></p></li><li><p><strong>详情：</strong></p><p>主动降级设置，无界方案采用了<code>proxy</code>和<code>webcomponent</code>等技术，在有些浏览器上可能出现不兼容的情况，此时无界会自动进行降级，采用一个的<code>iframe</code>替换<code>webcomponent</code>，用<code>Object.defineProperty</code>替换<code>proxy</code>，理论上可以兼容到 IE 9，但是用户也可以将<code>degrade</code>设置为<code>true</code>来主动降级</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>一旦采用降级方案，弹窗由于在 iframe 内部将无法覆盖整个应用</p></div></li></ul><h2 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;plugins&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>Array&lt;plugin&gt;</code></li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ScriptObjectLoader</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 脚本地址，内联为空 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 脚本是否为module模块 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">module</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 脚本是否为async执行 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">async</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 脚本是否设置crossorigin */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">crossorigin</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 脚本crossorigin的类型 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">crossoriginType</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anonymous</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">use-credentials</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 内联script的代码 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 执行回调钩子 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">callback</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">appWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">StyleObjectLoader</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 样式地址， 内联为空 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 样式代码 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">eventListenerHook</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> (</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">iframeWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">handler</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">EventListenerOrEventListenerObject</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AddEventListenerOptions</span></span>
<span class="line"><span style="color:#BABED8;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">plugin</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理html的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">htmlLoader</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">code</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** js排除列表 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsExcludes</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** js忽略列表 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsIgnores</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理js加载前的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsBeforeLoaders</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ScriptObjectLoader</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理js的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsLoader</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">code</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">base</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理js加载后的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsAfterLoaders</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ScriptObjectLoader</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** css排除列表 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">cssExcludes</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** css忽略列表 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">cssIgnores</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理css加载前的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">cssBeforeLoaders</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">StyleObject</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理css的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">cssLoader</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">code</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">base</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 处理css加载后的loader */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">cssAfterLoaders</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">StyleObject</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用 window addEventListener 钩子回调 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">windowAddEventListenerHook</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">eventListenerHook</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用 window removeEventListener 钩子回调 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">windowRemoveEventListenerHook</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">eventListenerHook</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用 document addEventListener 钩子回调 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">documentAddEventListenerHook</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">eventListenerHook</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用 document removeEventListener 钩子回调 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">documentRemoveEventListenerHook</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">eventListenerHook</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用 向body、head插入元素后执行的钩子回调 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">appendOrInsertElementHook</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">extends</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Node</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#BABED8;font-style:italic;">element</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">iframeWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 子应用劫持元素的钩子回调 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">patchElementHook</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">extends</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Node</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#BABED8;font-style:italic;">element</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">iframeWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 用户自定义覆盖子应用 window 属性 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">windowPropertyOverride</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">iframeWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">/** 用户自定义覆盖子应用 document 属性 */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">documentPropertyOverride</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">iframeWindow</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>详情：</strong> 无界插件，在运行时动态的修改子应用代理，具体使用详见 <a href="/doc/guide/plugin.html">示例</a></li></ul><h2 id="beforeload" tabindex="-1">beforeLoad <a class="header-anchor" href="#beforeload" aria-label="Permalink to &quot;beforeLoad&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，加载子应用前调用</p></li></ul><h2 id="beforemount" tabindex="-1">beforeMount <a class="header-anchor" href="#beforemount" aria-label="Permalink to &quot;beforeMount&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，子应用 mount 之前调用</p></li></ul><h2 id="aftermount" tabindex="-1">afterMount <a class="header-anchor" href="#aftermount" aria-label="Permalink to &quot;afterMount&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，子应用 mount 之后调用</p></li></ul><h2 id="beforeunmount" tabindex="-1">beforeUnmount <a class="header-anchor" href="#beforeunmount" aria-label="Permalink to &quot;beforeUnmount&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，子应用 unmount 之前调用</p></li></ul><h2 id="afterunmount" tabindex="-1">afterUnmount <a class="header-anchor" href="#afterunmount" aria-label="Permalink to &quot;afterUnmount&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，子应用 unmount 之后调用</p></li></ul><h2 id="activated" tabindex="-1">activated <a class="header-anchor" href="#activated" aria-label="Permalink to &quot;activated&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，保活子应用进入时触发</p></li></ul><h2 id="deactivated" tabindex="-1">deactivated <a class="header-anchor" href="#deactivated" aria-label="Permalink to &quot;deactivated&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(appWindow: Window) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，保活子应用离开时触发</p></li></ul><h2 id="loaderror" tabindex="-1">loadError <a class="header-anchor" href="#loaderror" aria-label="Permalink to &quot;loadError&quot;">​</a></h2><ul><li><p><strong>类型：</strong> <code>(url: string, e: Error) =&gt; any</code></p></li><li><p><strong>详情：</strong> 生命周期钩子，子应用加载资源失败后触发</p></li></ul><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果子应用没有做<a href="/doc/guide/start.html#生命周期改造">生命周期改造</a>，beforeMount、afterMount、beforeUnmount、afterUnmount 这四个生命周期都不会调用，非保活子应用 activated、deactivated 这两个生命周期不会调用</p></div>`,47)]))}const F=n(p,[["render",e]]);export{D as __pageData,F as default};
